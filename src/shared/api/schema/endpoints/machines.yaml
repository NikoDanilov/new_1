schemas:
  Machine:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: '550e8400-e29b-41d4-a716-446655440000'
      name:
        type: string
        example: 'Excavator X-2000'
      images:
        type: array
        items:
          type: string
          format: uri
          example: 'https://example.com/images/x2000.jpg'
      price:
        type: number
        format: float
        example: 25000.99
      rating:
        type: number
        format: float
        minimum: 0
        maximum: 5
        example: 4.5
      like:
        type: boolean
        example: true
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
    required:
      - name
      - price
  MachineList:
    type: object
    required:
      - list
      - total
      - totalPages
    properties:
      list:
        type: array
        items:
          $ref: '#/schemas/Machine'
      total:
        type: integer
      totalPages:
        type: integer

  MachineCreate:
    type: object
    properties:
      name:
        type: string
        example: 'Excavator X-2000'
      images:
        type: array
        items:
          type: string
          format: uri
          example: 'https://example.com/images/x2000.jpg'
      price:
        type: number
        format: float
        example: 25000.99
      rating:
        type: number
        format: float
        minimum: 0
        maximum: 5
        example: 4.5
    required:
      - name
      - price

  MachineUpdate:
    type: object
    properties:
      name:
        type: string
        example: 'Excavator X-2000 Pro'
      images:
        type: array
        items:
          type: string
          format: uri
          example: 'https://example.com/images/x2000-pro.jpg'
      price:
        type: number
        format: float
        example: 27000.50
      rating:
        type: number
        format: float
        minimum: 0
        maximum: 5
        example: 4.7

getAllMachines:
  summary: Get all machines
  parameters:
    - name: page
      in: query
      description: Page number
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    - name: limit
      in: query
      description: Items per page
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
    - name: sort
      in: query
      description: Sort field (name, price, rating)
      required: false
      schema:
        type: string
        enum: [name, price, rating, createdAt]
    - name: order
      in: query
      description: Sort order
      required: false
      schema:
        type: string
        enum: [asc, desc]
        default: asc
    - name: minPrice
      in: query
      description: Minimum price filter
      required: false
      schema:
        type: number
        format: float
    - name: maxPrice
      in: query
      description: Maximum price filter
      required: false
      schema:
        type: number
        format: float
    - name: search
      in: query
      description: Search term in name
      required: false
      schema:
        type: string
  responses:
    '200':
      description: A list of machines
      content:
        application/json:
          schema:
            $ref: '#/schemas/MachineList'

    '401':
      $ref: '../shared/responses.yaml#/BadRequestError'

createMachine:
  summary: Create a new machine
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/MachineCreate'
  responses:
    '201':
      description: Machine created
      content:
        application/json:
          schema:
            $ref: '#/schemas/Machine'

getMachineById:
  summary: Get a machine by ID
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '200':
      description: Machine found
      content:
        application/json:
          schema:
            $ref: '#/schemas/Machine'
    '404':
      $ref: '../shared/responses.yaml#/BadRequestError'

updateMachine:
  summary: Update a machine
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/MachineUpdate'
  responses:
    '200':
      description: Machine updated
      content:
        application/json:
          schema:
            $ref: '#/schemas/Machine'
    '401':
      $ref: '../shared/responses.yaml#/BadRequestError'

deleteMachine:
  summary: Delete a machine
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '204':
      description: Machine deleted
    '404':
      $ref: '../shared/responses.yaml#/BadRequestError'

toggleMachineLike:
  summary: Toggle like status for a machine
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '200':
      description: Like status toggled
      content:
        application/json:
          schema:
            type: object
            properties:
              like:
                type: boolean
                example: true
    '404':
      $ref: '../shared/responses.yaml#/BadRequestError'
