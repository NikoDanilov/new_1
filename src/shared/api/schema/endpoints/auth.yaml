schemas:
  # User:
  #   type: object
  #   required:
  #     - id
  #     - email
  #   properties:
  #     id:
  #       type: string
  #     email:
  #       type: string
  #       format: email
  User:
    type: object
    required:
      - id
      - email
    properties:
      id:
        type: string
        format: uuid
        example: '550e8400-e29b-41d4-a716-446655440000'
      email:
        type: string
        format: email
        example: user@example.com
      name:
        type: string
        nullable: true
        example: 'John'
      surname:
        type: string
        nullable: true
        example: 'Doe'
      image:
        type: string
        format: uri
        nullable: true
        example: 'https://example.com/avatar.jpg'
      createdAt:
        type: string
        format: date-time
        example: '2023-01-01T00:00:00Z'
      updatedAt:
        type: string
        format: date-time
        example: '2023-01-01T00:00:00Z'

  LoginRequest:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        format: password

  RegisterRequest:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        format: password

  AuthResponse:
    type: object
    required:
      - accessToken
      - user
    properties:
      accessToken:
        type: string
      user:
        $ref: '#/schemas/User'

  UpdateProfileRequest:
    type: object
    properties:
      email:
        type: string
        format: email
        nullable: true
        example: new-email@example.com
      name:
        type: string
        nullable: true
        example: 'Alex'
      surname:
        type: string
        nullable: true
        example: 'Smith'
      image:
        type: string
        format: uri
        nullable: true
        example: 'https://example.com/new-avatar.jpg'
      currentPassword:
        type: string
        format: password
        description: Required if changing email or password
        example: 'oldPassword123'
      newPassword:
        type: string
        format: password
        minLength: 8
        nullable: true
        example: 'newPassword456'

login:
  summary: Login user
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/LoginRequest'
  responses:
    '200':
      description: Login successful
      content:
        application/json:
          schema:
            $ref: '#/schemas/AuthResponse'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'

register:
  summary: Register new user
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/RegisterRequest'
  responses:
    '201':
      description: Registration successful
      content:
        application/json:
          schema:
            $ref: '#/schemas/AuthResponse'
    '400':
      $ref: '../shared/responses.yaml#/BadRequestError'

refresh:
  summary: Refresh access token
  parameters:
    - in: cookie
      name: refreshToken
      schema:
        type: string
  responses:
    '200':
      description: Access token refreshed successfully
      content:
        application/json:
          schema:
            $ref: '#/schemas/AuthResponse'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'

getProfile:
  summary: Get current user profile
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/schemas/User'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'

patchProfile:
  summary: Update profile
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/UpdateProfileRequest'
  responses:
    '200':
      description: Updated
      content:
        application/json:
          schema:
            $ref: '#/schemas/User'
    '400':
      $ref: '../shared/responses.yaml#/BadRequestError'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'
